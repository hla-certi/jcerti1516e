
jcerti is a Java Binding for the CERTI HLA RTI.
jcerti is SISO DLC compliant.  


INSTALL/COMPILING INSTRUCTION
-----------------------------
As a prerequisite, the following software should be installed
 - Sun Java JDK (http://java.sun.com/javase/downloads)
 - Apache Ant (http://ant.apache.org)
 - xml-commons (http://xml.apache.org/commons)

Linux users, please make sure the appropriate 'javac' alternative is used.

Enable the javac alternative from Sun JDK using:
update-alternatives --install "/usr/bin/javac" javac "/usr/java/jdk1.6.0_19/bin/javac" 1
update-alternatives --set javac /usr/java/jdk1.6.0_19/bin/javac


jcerti comes with a build.xml ant file
(see http://ant.apache.org/manual/)

Thus building jcerti should be as simple as unpacking the source
and calling
"ant" 

with no argument.

If you want more help about possible ant target just type
"ant -p"


RUNNING TEST INSTRUCTION
-------------------------
Before running jcerti example yuo should have C++ CERTI installed
http://www.nongnu.org/certi/certi_doc/Install/html/index.html

(or if you are a CERTI C++ developer you can just define
 CERTI_HOST and CERTI_HOME env variables and update PATH in order to make rtia/rtig executable automatically reachable)


RUNNING TEST USING HLA 1516-2010 EVOLVED (jcerti/src_test/certi1516e)
----------------------------------------

Shipped with jcerti 1516E there is currently small tests. Each federate must be
executed in a different terminal.

Federation "uav" with 1 federate OneFederateTAR.java:
=====================================================

1) in a first terminal run rtig
2) in a second terminal run "ant -DtimeStep=2   -DupdateTime=1 -Dlookahead=0.5 oneTAR-run" (press enter)

Federation "uav" with 1 federate OneFederateTARrtig.java:
=========================================================

1) in a first terminal run rtig
2) in a second terminal run "ant -DtimeStep=2   -DupdateTime=1 -Dlookahead=0.5 oneTARrtig-run" (press enter)


Federation "uav" with 2 federates UavSendEvokeMCmin and UavReceiveEvokeMCmin: (using EvokeMultipleCallbacks)
=============================================================================

1) in a first terminal run rtig
2) in a second terminal run "ant -DtimeStep=2   -DupdateTime=1 -Dlookahead=0.5 MinEvokeMCUAVSend1516e-run" (press enter)
3) in a third terminal run "ant -DtimeStep=13 -DupdateTime=5 -Dlookahead=1 MinEvokeMCUAVReceive1516e-run" (press enter)
Then go back to terminal T2 and press Enter again.

Federation "uav" with 2 federates UavSend.java and UavReceive.java: (using EvokeCallback and createFederation(string,string))
===================================================================

1) in a first terminal run rtig
2) in a second terminal run "ant -DtimeStep=2   -DupdateTime=1 -Dlookahead=0.5 UAVSend1516eString-run" (press enter)
3) in a third terminal run "ant -DtimeStep=13 -DupdateTime=5 -Dlookahead=1 UAVReceive1516eString-run" (press enter)
Then go back to terminal T2 and press Enter again.

Federation "uav" with 2 federates UavSend.java and UavReceive.java: (using EvokeCallback)
===================================================================

1) in a first terminal run rtig
2) in a second terminal run "ant -DtimeStep=2   -DupdateTime=1 -Dlookahead=0.5 UAVSend1516e-run" (press enter)
3) in a third terminal run "ant -DtimeStep=13 -DupdateTime=5 -Dlookahead=1 UAVReceive1516e-run" (press enter)
Then go back to terminal T2 and press Enter again.


RUNNING TEST USING HLA 1.3 (jcerti/src_test/certi)
--------------------------

Shipped with jcerti there is currently a small UAV Send/Receive test.
If you want to try this you should:

1) in a first terminal run rtig
2) in a second terminal run "ant UAVSend-run"
3) in a second terminal run "ant UAVReceive-run"

